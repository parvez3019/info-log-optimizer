/Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61717:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /Users/olx/repos/Personal projects/log4error/target/classes:/Users/olx/.m2/repository/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.jar:/Users/olx/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/Users/olx/.m2/repository/org/springframework/spring-context/5.3.33/spring-context-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-aop/5.3.33/spring-aop-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-beans/5.3.33/spring-beans-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-core/5.3.33/spring-core-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-jcl/5.3.33/spring-jcl-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-expression/5.3.33/spring-expression-5.3.33.jar:/Users/olx/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/olx/.m2/repository/org/apache/tomcat/tomcat-annotations-api/10.1.19/tomcat-annotations-api-10.1.19.jar:/Users/olx/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/Users/olx/.m2/repository/org/springframework/spring-web/6.1.5/spring-web-6.1.5.jar:/Users/olx/.m2/repository/io/micrometer/micrometer-observation/1.12.4/micrometer-observation-1.12.4.jar:/Users/olx/.m2/repository/io/micrometer/micrometer-commons/1.12.4/micrometer-commons-1.12.4.jar:/Users/olx/.m2/repository/org/apache/maven/plugins/maven-install-plugin/3.1.1/maven-install-plugin-3.1.1.jar:/Users/olx/.m2/repository/org/eclipse/aether/aether-util/1.0.0.v20140518/aether-util-1.0.0.v20140518.jar:/Users/olx/.m2/repository/org/eclipse/aether/aether-api/1.0.0.v20140518/aether-api-1.0.0.v20140518.jar:/Users/olx/.m2/repository/org/codehaus/plexus/plexus-utils/3.5.0/plexus-utils-3.5.0.jar:/Users/olx/.m2/repository/org/apache/logging/log4j/log4j-core/2.23.1/log4j-core-2.23.1.jar:/Users/olx/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/Users/olx/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/olx/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/olx/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/olx/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/olx/.m2/repository/com/lmax/disruptor/3.3.0/disruptor-3.3.0.jar io.github.parvez3019.benchmarking.Main
# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61717:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark

# Run progress: 0.00% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
≈ 10⁻⁴ ops/ns
# Warmup Iteration   2: 0.001 ops/ns
Iteration   1: 0.001 ops/ns
Iteration   2: 0.001 ops/ns
Iteration   3: 0.001 ops/ns
Iteration   4: 0.001 ops/ns
Iteration   5: 0.001 ops/ns


Result "io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark":
  0.001 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61717:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark

# Run progress: 33.32% complete, ETA 00:00:16
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
38844.461 ±(99.9%) 2514.536 ns/op
# Warmup Iteration   2: 12065.419 ±(99.9%) 203.720 ns/op
Iteration   1: 10573.478 ±(99.9%) 133.381 ns/op
Iteration   2: 11362.169 ±(99.9%) 317.571 ns/op
Iteration   3: 11542.592 ±(99.9%) 386.774 ns/op
Iteration   4: 11276.373 ±(99.9%) 365.409 ns/op
Iteration   5: 13113.382 ±(99.9%) 655.336 ns/op


Result "io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark":
  11573.599 ±(99.9%) 3604.612 ns/op [Average]
  (min, avg, max) = (10573.478, 11573.599, 13113.382), stdev = 936.106
  CI (99.9%): [7968.987, 15178.211] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61717:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark

# Run progress: 66.64% complete, ETA 00:00:08
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
32058.336 ±(99.9%) 2410.679 ns/op
# Warmup Iteration   2: 21321.788 ±(99.9%) 813.706 ns/op
Iteration   1: 14151.773 ±(99.9%) 594.412 ns/op
                 p0.00:   8736.000 ns/op
                 p0.50:   9280.000 ns/op
                 p0.90:   10736.000 ns/op
                 p0.95:   14528.000 ns/op
                 p0.99:   84992.000 ns/op
                 p0.999:  1156401.152 ns/op
                 p0.9999: 2848890.061 ns/op
                 p1.00:   7700480.000 ns/op

Iteration   2: 11630.086 ±(99.9%) 410.760 ns/op
                 p0.00:   8624.000 ns/op
                 p0.50:   9280.000 ns/op
                 p0.90:   9872.000 ns/op
                 p0.95:   11952.000 ns/op
                 p0.99:   30624.000 ns/op
                 p0.999:  252592.640 ns/op
                 p0.9999: 2290120.704 ns/op
                 p1.00:   3215360.000 ns/op

Iteration   3: 11412.669 ±(99.9%) 395.855 ns/op
                 p0.00:   8736.000 ns/op
                 p0.50:   9280.000 ns/op
                 p0.90:   9408.000 ns/op
                 p0.95:   11488.000 ns/op
                 p0.99:   27456.000 ns/op
                 p0.999:  190888.960 ns/op
                 p0.9999: 2120669.184 ns/op
                 p1.00:   2924544.000 ns/op

Iteration   4: 11776.504 ±(99.9%) 410.724 ns/op
                 p0.00:   8736.000 ns/op
                 p0.50:   9280.000 ns/op
                 p0.90:   9616.000 ns/op
                 p0.95:   12160.000 ns/op
                 p0.99:   39166.080 ns/op
                 p0.999:  256955.904 ns/op
                 p0.9999: 2312095.334 ns/op
                 p1.00:   3702784.000 ns/op

Iteration   5: 12078.808 ±(99.9%) 421.895 ns/op
                 p0.00:   8656.000 ns/op
                 p0.50:   9280.000 ns/op
                 p0.90:   10320.000 ns/op
                 p0.95:   12240.000 ns/op
                 p0.99:   40768.000 ns/op
                 p0.999:  360960.000 ns/op
                 p0.9999: 2172178.842 ns/op
                 p1.00:   2777088.000 ns/op



Result "io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark":
  N = 930180
  mean =  12172.294 ±(99.9%) 199.997 ns/op

  Histogram, ns/op:
    [      0.000,  500000.000) = 929326
    [ 500000.000, 1000000.000) = 88
    [1000000.000, 1500000.000) = 57
    [1500000.000, 2000000.000) = 419
    [2000000.000, 2500000.000) = 232
    [2500000.000, 3000000.000) = 44
    [3000000.000, 3500000.000) = 6
    [3500000.000, 4000000.000) = 4
    [4000000.000, 4500000.000) = 2
    [4500000.000, 5000000.000) = 0
    [5000000.000, 5500000.000) = 1
    [5500000.000, 6000000.000) = 0
    [6000000.000, 6500000.000) = 0
    [6500000.000, 7000000.000) = 0
    [7000000.000, 7500000.000) = 0

  Percentiles, ns/op:
      p(0.0000) =   8624.000 ns/op
     p(50.0000) =   9280.000 ns/op
     p(90.0000) =   9952.000 ns/op
     p(95.0000) =  12240.000 ns/op
     p(99.0000) =  40704.000 ns/op
     p(99.9000) = 403875.328 ns/op
     p(99.9900) = 2342689.587 ns/op
     p(99.9990) = 3215360.000 ns/op
     p(99.9999) = 7700480.000 ns/op
    p(100.0000) = 7700480.000 ns/op


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=61717:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads
# Benchmark mode: Single shot invocation time
# Benchmark: io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark

# Run progress: 99.97% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
43259963.625 ±(99.9%) 2494207.626 ns/op
# Warmup Iteration   2: 4631161.375 ±(99.9%) 1374084.835 ns/op
Iteration   1: 3113031.375 ±(99.9%) 1966155.175 ns/op
Iteration   2: 3329333.125 ±(99.9%) 931829.237 ns/op
Iteration   3: 3750281.125 ±(99.9%) 1263717.030 ns/op
Iteration   4: 232677.375 ±(99.9%) 242293.204 ns/op
Iteration   5: 218656.250 ±(99.9%) 55011.302 ns/op


Result "io.github.parvez3019.benchmarking.SLF4jBenchmark.slf4jLoggerBenchmark":
  N = 5
  mean = 2128795.850 ±(99.9%) 6747730.902 ns/op

  Histogram, ns/op:
    [      0.000,  250000.000) = 2
    [ 250000.000,  500000.000) = 0
    [ 500000.000,  750000.000) = 0
    [ 750000.000, 1000000.000) = 0
    [1000000.000, 1250000.000) = 0
    [1250000.000, 1500000.000) = 0
    [1500000.000, 1750000.000) = 0
    [1750000.000, 2000000.000) = 0
    [2000000.000, 2250000.000) = 0
    [2250000.000, 2500000.000) = 0
    [2500000.000, 2750000.000) = 0
    [2750000.000, 3000000.000) = 0
    [3000000.000, 3250000.000) = 1
    [3250000.000, 3500000.000) = 1
    [3500000.000, 3750000.000) = 0

  Percentiles, ns/op:
      p(0.0000) = 218656.250 ns/op
     p(50.0000) = 3113031.375 ns/op
     p(90.0000) = 3750281.125 ns/op
     p(95.0000) = 3750281.125 ns/op
     p(99.0000) = 3750281.125 ns/op
     p(99.9000) = 3750281.125 ns/op
     p(99.9900) = 3750281.125 ns/op
     p(99.9990) = 3750281.125 ns/op
     p(99.9999) = 3750281.125 ns/op
    p(100.0000) = 3750281.125 ns/op


# Run complete. Total time: 00:00:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                      Mode     Cnt        Score         Error   Units
SLF4jBenchmark.slf4jLoggerBenchmark           thrpt       5        0.001 ±       0.001  ops/ns
SLF4jBenchmark.slf4jLoggerBenchmark            avgt       5    11573.599 ±    3604.612   ns/op
SLF4jBenchmark.slf4jLoggerBenchmark          sample  930180    12172.294 ±     199.997   ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p0.00    sample             8624.000                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p0.50    sample             9280.000                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p0.90    sample             9952.000                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p0.95    sample            12240.000                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p0.99    sample            40704.000                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p0.999   sample           403875.328                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p0.9999  sample          2342689.587                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark:p1.00    sample          7700480.000                 ns/op
SLF4jBenchmark.slf4jLoggerBenchmark              ss       5  2128795.850 ± 6747730.902   ns/op

Process finished with exit code 0

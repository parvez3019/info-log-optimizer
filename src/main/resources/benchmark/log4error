/Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62067:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8 -classpath /Users/olx/repos/Personal projects/log4error/target/classes:/Users/olx/.m2/repository/org/apache/commons/commons-lang3/3.14.0/commons-lang3-3.14.0.jar:/Users/olx/.m2/repository/org/slf4j/slf4j-api/2.0.9/slf4j-api-2.0.9.jar:/Users/olx/.m2/repository/org/springframework/spring-context/5.3.33/spring-context-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-aop/5.3.33/spring-aop-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-beans/5.3.33/spring-beans-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-core/5.3.33/spring-core-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-jcl/5.3.33/spring-jcl-5.3.33.jar:/Users/olx/.m2/repository/org/springframework/spring-expression/5.3.33/spring-expression-5.3.33.jar:/Users/olx/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.19/tomcat-embed-core-10.1.19.jar:/Users/olx/.m2/repository/org/apache/tomcat/tomcat-annotations-api/10.1.19/tomcat-annotations-api-10.1.19.jar:/Users/olx/.m2/repository/javax/servlet/javax.servlet-api/4.0.1/javax.servlet-api-4.0.1.jar:/Users/olx/.m2/repository/org/springframework/spring-web/6.1.5/spring-web-6.1.5.jar:/Users/olx/.m2/repository/io/micrometer/micrometer-observation/1.12.4/micrometer-observation-1.12.4.jar:/Users/olx/.m2/repository/io/micrometer/micrometer-commons/1.12.4/micrometer-commons-1.12.4.jar:/Users/olx/.m2/repository/org/apache/maven/plugins/maven-install-plugin/3.1.1/maven-install-plugin-3.1.1.jar:/Users/olx/.m2/repository/org/eclipse/aether/aether-util/1.0.0.v20140518/aether-util-1.0.0.v20140518.jar:/Users/olx/.m2/repository/org/eclipse/aether/aether-api/1.0.0.v20140518/aether-api-1.0.0.v20140518.jar:/Users/olx/.m2/repository/org/codehaus/plexus/plexus-utils/3.5.0/plexus-utils-3.5.0.jar:/Users/olx/.m2/repository/org/apache/logging/log4j/log4j-core/2.23.1/log4j-core-2.23.1.jar:/Users/olx/.m2/repository/org/apache/logging/log4j/log4j-api/2.23.1/log4j-api-2.23.1.jar:/Users/olx/.m2/repository/org/openjdk/jmh/jmh-generator-annprocess/1.37/jmh-generator-annprocess-1.37.jar:/Users/olx/.m2/repository/org/openjdk/jmh/jmh-core/1.37/jmh-core-1.37.jar:/Users/olx/.m2/repository/net/sf/jopt-simple/jopt-simple/5.0.4/jopt-simple-5.0.4.jar:/Users/olx/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/Users/olx/.m2/repository/com/lmax/disruptor/3.3.0/disruptor-3.3.0.jar io.github.parvez3019.benchmarking.Main
# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62067:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark

# Run progress: 0.00% complete, ETA 00:00:21
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
≈ 10⁻⁵ ops/ns
# Warmup Iteration   2: ≈ 10⁻⁵ ops/ns
Iteration   1: ≈ 10⁻⁵ ops/ns
Iteration   2: ≈ 10⁻⁵ ops/ns
Iteration   3: ≈ 10⁻⁵ ops/ns
Iteration   4: ≈ 10⁻⁵ ops/ns
Iteration   5: ≈ 10⁻⁵ ops/ns


Result "io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark":
  ≈ 10⁻⁵ ops/ns


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62067:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark

# Run progress: 33.32% complete, ETA 00:00:18
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
1819213.885 ±(99.9%) 53479.903 ns/op
# Warmup Iteration   2: 1663012.882 ±(99.9%) 41098.171 ns/op
Iteration   1: 1550053.677 ±(99.9%) 47658.835 ns/op
Iteration   2: 1579730.515 ±(99.9%) 64895.621 ns/op
Iteration   3: 1672122.494 ±(99.9%) 34974.976 ns/op
Iteration   4: 1601383.003 ±(99.9%) 63286.565 ns/op
Iteration   5: 1635395.728 ±(99.9%) 169606.044 ns/op


Result "io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark":
  1607737.083 ±(99.9%) 183286.195 ns/op [Average]
  (min, avg, max) = (1550053.677, 1607737.083, 1672122.494), stdev = 47598.843
  CI (99.9%): [1424450.888, 1791023.279] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62067:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads, will synchronize iterations
# Benchmark mode: Sampling time
# Benchmark: io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark

# Run progress: 66.64% complete, ETA 00:00:09
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
1641633.143 ±(99.9%) 364784.203 ns/op
# Warmup Iteration   2: 1715988.852 ±(99.9%) 635907.516 ns/op
Iteration   1: 1343688.605 ±(99.9%) 557258.126 ns/op
                 p0.00:   17408.000 ns/op
                 p0.50:   634880.000 ns/op
                 p0.90:   839680.000 ns/op
                 p0.95:   1042432.000 ns/op
                 p0.99:   1394196.480 ns/op
                 p0.999:  273154048.000 ns/op
                 p0.9999: 274202624.000 ns/op
                 p1.00:   274202624.000 ns/op

Iteration   2: 1395967.676 ±(99.9%) 643346.711 ns/op
                 p0.00:   18208.000 ns/op
                 p0.50:   608256.000 ns/op
                 p0.90:   709632.000 ns/op
                 p0.95:   739328.000 ns/op
                 p0.99:   897433.600 ns/op
                 p0.999:  290979840.000 ns/op
                 p0.9999: 292028416.000 ns/op
                 p1.00:   292028416.000 ns/op

Iteration   3: 2057979.950 ±(99.9%) 1166296.751 ns/op
                 p0.00:   31360.000 ns/op
                 p0.50:   640000.000 ns/op
                 p0.90:   770048.000 ns/op
                 p0.95:   828416.000 ns/op
                 p0.99:   987873.280 ns/op
                 p0.999:  373293056.000 ns/op
                 p0.9999: 373817344.000 ns/op
                 p1.00:   373817344.000 ns/op

Iteration   4: 1656045.474 ±(99.9%) 855913.897 ns/op
                 p0.00:   17856.000 ns/op
                 p0.50:   609280.000 ns/op
                 p0.90:   707584.000 ns/op
                 p0.95:   744448.000 ns/op
                 p0.99:   972011.520 ns/op
                 p0.999:  381681664.000 ns/op
                 p0.9999: 382730240.000 ns/op
                 p1.00:   382730240.000 ns/op

Iteration   5: 1599604.259 ±(99.9%) 790002.712 ns/op
                 p0.00:   135680.000 ns/op
                 p0.50:   619520.000 ns/op
                 p0.90:   776192.000 ns/op
                 p0.95:   871424.000 ns/op
                 p0.99:   1364459.520 ns/op
                 p0.999:  452357783.552 ns/op
                 p0.9999: 452984832.000 ns/op
                 p1.00:   452984832.000 ns/op



Result "io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark":
  N = 28485
  mean = 1579173.688 ±(99.9%) 353163.044 ns/op

  Histogram, ns/op:
    [        0.000,  50000000.000) = 28405
    [ 50000000.000, 100000000.000) = 0
    [100000000.000, 150000000.000) = 0
    [150000000.000, 200000000.000) = 0
    [200000000.000, 250000000.000) = 8
    [250000000.000, 300000000.000) = 24
    [300000000.000, 350000000.000) = 8
    [350000000.000, 400000000.000) = 29
    [400000000.000, 450000000.000) = 3

  Percentiles, ns/op:
      p(0.0000) =  17408.000 ns/op
     p(50.0000) = 618496.000 ns/op
     p(90.0000) = 750592.000 ns/op
     p(95.0000) = 836300.800 ns/op
     p(99.0000) = 1251328.000 ns/op
     p(99.9000) = 373038252.032 ns/op
     p(99.9900) = 452460544.000 ns/op
     p(99.9990) = 452984832.000 ns/op
     p(99.9999) = 452984832.000 ns/op
    p(100.0000) = 452984832.000 ns/op


# JMH version: 1.37
# VM version: JDK 21.0.2, OpenJDK 64-Bit Server VM, 21.0.2+13-LTS
# VM invoker: /Users/olx/Library/Java/JavaVirtualMachines/corretto-21.0.2/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=62067:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 8 threads
# Benchmark mode: Single shot invocation time
# Benchmark: io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark

# Run progress: 99.97% complete, ETA 00:00:00
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
69823447.750 ±(99.9%) 1858451.453 ns/op
# Warmup Iteration   2: 7437421.875 ±(99.9%) 9916917.186 ns/op
Iteration   1: 2680010.125 ±(99.9%) 878847.748 ns/op
Iteration   2: 1276906.375 ±(99.9%) 1010507.109 ns/op
Iteration   3: 465093.875 ±(99.9%) 201450.502 ns/op
Iteration   4: 596583.500 ±(99.9%) 209116.793 ns/op
Iteration   5: 700724.125 ±(99.9%) 94219.011 ns/op


Result "io.github.parvez3019.benchmarking.Log4ErrorBenchmark.customLoggerBenchmark":
  N = 5
  mean = 1143863.600 ±(99.9%) 3515525.595 ns/op

  Histogram, ns/op:
    [      0.000,  250000.000) = 0
    [ 250000.000,  500000.000) = 1
    [ 500000.000,  750000.000) = 2
    [ 750000.000, 1000000.000) = 0
    [1000000.000, 1250000.000) = 0
    [1250000.000, 1500000.000) = 1
    [1500000.000, 1750000.000) = 0
    [1750000.000, 2000000.000) = 0
    [2000000.000, 2250000.000) = 0
    [2250000.000, 2500000.000) = 0
    [2500000.000, 2750000.000) = 1

  Percentiles, ns/op:
      p(0.0000) = 465093.875 ns/op
     p(50.0000) = 700724.125 ns/op
     p(90.0000) = 2680010.125 ns/op
     p(95.0000) = 2680010.125 ns/op
     p(99.0000) = 2680010.125 ns/op
     p(99.9000) = 2680010.125 ns/op
     p(99.9900) = 2680010.125 ns/op
     p(99.9990) = 2680010.125 ns/op
     p(99.9999) = 2680010.125 ns/op
    p(100.0000) = 2680010.125 ns/op


# Run complete. Total time: 00:00:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                           Mode    Cnt          Score         Error   Units
Log4ErrorBenchmark.customLoggerBenchmark           thrpt      5         ≈ 10⁻⁵                ops/ns
Log4ErrorBenchmark.customLoggerBenchmark            avgt      5    1607737.083 ±  183286.195   ns/op
Log4ErrorBenchmark.customLoggerBenchmark          sample  28485    1579173.688 ±  353163.044   ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p0.00    sample             17408.000                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p0.50    sample            618496.000                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p0.90    sample            750592.000                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p0.95    sample            836300.800                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p0.99    sample           1251328.000                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p0.999   sample         373038252.032                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p0.9999  sample         452460544.000                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark:p1.00    sample         452984832.000                 ns/op
Log4ErrorBenchmark.customLoggerBenchmark              ss      5    1143863.600 ± 3515525.595   ns/op

Process finished with exit code 0
